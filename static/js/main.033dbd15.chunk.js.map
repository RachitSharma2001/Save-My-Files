{"version":3,"sources":["CmdInput.jsx","OldCmd.jsx","Home.jsx","Signup.jsx","Login.jsx","Help.jsx","Signout.jsx","PublicNav.jsx","PrivateNav.jsx","App.js","reportWebVitals.js","index.js"],"names":["CmdInput","props","interpretCmd","currDirPath","clearCmdInput","useState","cmdString","setCmdString","onSubmit","event","preventDefault","then","result","target","reset","style","color","fontSize","className","autoFocus","onChange","value","OldCmd","class","text","makeNewPath","path","cmd","Home","userId","cmdList","changeCmdList","backend_url","setCurrDirPath","subdirList","setSubdirList","fileList","setFileList","fileSelectName","setFileName","backgroundHeight","setBackgroundHeight","id","backgroundColor","Box","sx","width","height","type","name","file","files","form_data","FormData","append","fetch","body","method","map","givenDirPath","givenCmd","window","innerHeight","scrollY","document","getElementById","scrollHeight","toString","Promise","resolve","push","i","length","handleLs","startsWith","newDir","substring","res","handleMakedir","newDirPath","match","lastSlashInd","lastIndexOf","subdir","numUpwards","givenDirSplit","split","slice","join","indexOf","getDirPath","ok","json","data","newFileList","newSubdirList","fileIndex","dirIndex","catch","error","handleCd","reject","fileName","click","handleUpload","dirContent","potentialItem","inDirectory","location","href","handleDownload","SignUp","email","setEmail","password","setPassword","signupSuccess","setUserSignedUp","emailExists","setEmailExists","passwordErr","setPasswordErr","givenUrl","url","contains","character","passCheck","containsUpper","specialChars","containsSpecial","Form","display","justifyContent","alignItems","Group","controlId","marginTop","marginLeft","marginRight","Label","Control","placeholder","Text","Button","onClick","console","log","userUrl","checkUser","userExists","Login","saveTokenFunc","wrongPassword","setWrongPassword","wrongEmail","setWrongEmail","Help","Signout","clearToken","withRouter","to","pathname","App","getToken","tokenString","localStorage","getItem","JSON","parse","token","setToken","backendUrl","clear","userToken","setItem","stringify","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.033dbd15.chunk.js","sourcesContent":["import { React, useState } from 'react';\r\nimport './Cmd.css';\r\n/* React component for the current command user enters */\r\nexport default function CmdInput(props){\r\n  const { interpretCmd, currDirPath, clearCmdInput } = props;\r\n  const [cmdString, setCmdString] = useState(\"\");\r\n  \r\n  // Function called when user types new text.\r\n  const changedText = (event) => {\r\n    // Set text shown to new text\r\n    setCmdString(event.target.value);\r\n  }\r\n\r\n  // Function called when user clicks enter keyboard button\r\n  const cmdEntered = (event) => {\r\n    // prevent page from reloading (it empties the screen otherwise)\r\n    event.preventDefault();\r\n    // Call parent function addToCmd, wait for it to finish\r\n    interpretCmd(currDirPath, cmdString).then(result => {\r\n        // Reset user text (otherwise on next line the previous line user entered is still existent)\r\n        event.target.reset();\r\n    })\r\n  }\r\n  \r\n  // Render html => we make sure to autofocus cursor on this input\r\n  return (\r\n    <form onSubmit={cmdEntered}>\r\n        <label style={{color: 'green', fontSize: \"20px\"}}>{currDirPath}&gt;&nbsp;</label>\r\n        <input className=\"CmdText\" autoFocus onChange={changedText}/>\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\nimport './Cmd.css';\r\n\r\n// React component for all of the old commands -> just shows their text and a new line\r\nexport default function OldCmd(props) {\r\n    return (\r\n        <div>\r\n            <label class=\"Text\">{props.text}</label>\r\n            <br/>\r\n        </div>\r\n    )\r\n}","import { React, useState } from 'react';\r\nimport './Home.css';\r\nimport Box from '@mui/material/Box';\r\nimport CmdInput from './CmdInput.jsx';\r\nimport OldCmd from './OldCmd.jsx';\r\nimport _default from '@popperjs/core/lib/modifiers/flip';\r\nfunction makeNewPath(path, cmd){\r\n    return path + \"> \" + cmd;\r\n}\r\nfunction inDirectory(dirContent, potentialItem){\r\n    for(let i = 0; i < dirContent.length; i++){\r\n        if(dirContent[i] == potentialItem){\r\n        return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction getDirPath(newDir, givenDirPath){\r\n    if(newDir.startsWith('C:')){\r\n        // newDir is a direct path (not one in our directory)\r\n        return newDir;\r\n    }else if(newDir.startsWith('../') && newDir.match(/(..\\/)+[A-Z,a-z,0-9,_,.,\\/]+/)[0] == newDir){\r\n        let lastSlashInd = newDir.lastIndexOf('../')+3;\r\n        let subdir = newDir.substring(lastSlashInd);\r\n        let numUpwards = lastSlashInd / 3;\r\n        if(subdir == \"..\"){\r\n          subdir = \"\";\r\n          numUpwards++;\r\n        }\r\n        let givenDirSplit = givenDirPath.split('/');\r\n        let newPrefixPath = givenDirSplit.slice(0, givenDirSplit.length - numUpwards).join('/');\r\n        return newPrefixPath + (subdir.length != 0 ? '/' + subdir : '');\r\n    }else if(newDir == '..'){\r\n        return givenDirPath.substring(0, givenDirPath.lastIndexOf('/'));\r\n    }else{\r\n        let indexOfSlash = (newDir.indexOf('/') == -1 ? newDir.length : newDir.indexOf('/'));\r\n        return givenDirPath + \"/\" + newDir;\r\n    }\r\n}\r\nexport default function Home(props){\r\n    const userId = props.userId;\r\n    const [cmdList, changeCmdList] = useState([]);\r\n    const backend_url = \"http://127.0.0.1:8000/\";\r\n    const [currDirPath, setCurrDirPath] = useState('C:');\r\n    const [subdirList, setSubdirList] = useState(['home']);\r\n    const [fileList, setFileList] = useState([]);\r\n    const [fileSelectName, setFileName] = useState('');\r\n    const [backgroundHeight, setBackgroundHeight] = useState(200);\r\n    \r\n    // Function called once user selects file\r\n    const fileSelected = (event) => {\r\n      const file = event.target.files[0];\r\n      const form_data = new FormData();\r\n      form_data.append('file', file);\r\n      let insertFileUrl = backend_url + 'files/file?name='+fileSelectName + '&parent_path='+currDirPath + '&user_id=' + userId;\r\n      // Call api endpoint that saves file to database\r\n      fetch(insertFileUrl, {\r\n        body: form_data,\r\n        method: \"POST\"\r\n      });\r\n    }\r\n    \r\n    const handleLs = (givenDirPath, givenCmd) => {\r\n      const waitToAdd = new Promise((resolve) => { \r\n        cmdList.push(makeNewPath(givenDirPath, givenCmd));\r\n        for(let i = 0; i < fileList.length; i++){\r\n          cmdList.push(fileList[i]);\r\n        }\r\n        for(let i = 0; i < subdirList.length; i++){\r\n          cmdList.push(subdirList[i]);\r\n        }\r\n        changeCmdList([...cmdList]);\r\n        resolve();\r\n      });\r\n      return waitToAdd;\r\n    }\r\n  \r\n    const handleMakedir = (givenDirPath, givenCmd) => {\r\n      const waitToInterpret = new Promise((resolve) => {\r\n        let newDir = givenCmd.substring(8);\r\n        if(newDir.length == 0){\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"Invalid Directory Name\"]);\r\n          resolve();\r\n        }else if(givenDirPath == 'C:'){\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"Cannot insert anything in the root directory\"]);\r\n          resolve();\r\n        }else{\r\n          setSubdirList([...subdirList, newDir]);\r\n          let newPath = givenDirPath + '/' + newDir;\r\n          let makeDirUrl = backend_url + 'files/dir?dir_name=' + newDir + '&dir_path=' + newPath + '&parent_path=' + currDirPath + \"&user_id=\" + userId + \"&is_home_path=0\";\r\n          fetch(makeDirUrl, {method:\"POST\"})\r\n          .then(res => {\r\n            changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd)]);\r\n            resolve();\r\n          });\r\n        }\r\n      });\r\n      return waitToInterpret;\r\n    };\r\n  \r\n    const handleCd = (givenDirPath, givenCmd) => {\r\n      const waitToInterpret = new Promise((resolve) => {\r\n        let newDir = givenCmd.substring(3);\r\n        let newDirPath = getDirPath(newDir, givenDirPath);\r\n        let getDirUrl = backend_url + 'files/dir?user_id=' + userId + '&dir_path=' + newDirPath;\r\n        fetch(getDirUrl).then(res => {\r\n          if(!res.ok){\r\n            throw res;\r\n          }\r\n          return res.json();\r\n        }).then(data => {\r\n          let newFileList = [];\r\n          let newSubdirList = [];\r\n          for(const fileIndex in data['files']){\r\n            newFileList.push(data['files'][fileIndex]);\r\n          }\r\n          for(const dirIndex in data['subdirs']){\r\n            newSubdirList.push(data['subdirs'][dirIndex]);\r\n          }\r\n          setFileList([...newFileList]);\r\n          setSubdirList([...newSubdirList]);\r\n          setCurrDirPath(newDirPath);\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd)]);\r\n          resolve();\r\n        }).catch((error) => {\r\n          let errorMessage = \"Directory does not exist\";\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), errorMessage]);\r\n          resolve();\r\n        });\r\n      });\r\n      return waitToInterpret;\r\n    };\r\n  \r\n    const handleUpload = (givenDirPath, givenCmd) => {\r\n      const waitToInterpret = new Promise((resolve, reject) => {\r\n        let fileName = givenCmd.substring(7);\r\n        if(fileName.length == 0){\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"Invalid file name\"]);\r\n          resolve();\r\n        }else if(givenDirPath == 'C:'){\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"Cannot insert anything in the root directory\"]);\r\n          resolve();\r\n        }else{\r\n          setFileList([...fileList, fileName]);\r\n          setFileName(fileName);\r\n          // Click the invisible upload button that triggers file selection for user\r\n          document.getElementById('upload').click();\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd)]);\r\n          resolve();\r\n        }\r\n      });\r\n      return waitToInterpret;\r\n    };\r\n  \r\n    const handleDownload = (givenDirPath, givenCmd) => {\r\n      const waitToInterpret = new Promise((resolve, reject) => {\r\n        let fileName = givenCmd.substring(9);\r\n        if(inDirectory(fileList, fileName)){\r\n          // Get binary data of file, or return error if doesn't exist\r\n          window.location.href = backend_url + 'files/file?name=' + fileName;\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd)]);\r\n          resolve();\r\n        }else{\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"File does not exist in directory\"]);\r\n          resolve();\r\n        }\r\n      });\r\n      return waitToInterpret;\r\n    };\r\n  \r\n    /*\r\n      Function called by CmdInput.jsx once user enters command\r\n      Parameters:\r\n        givenDirPath - string representing directory command was entered\r\n        givenCmd - string representing command\r\n      Returns:\r\n        a promise that interprets the given command and updates the cmd list\r\n    */\r\n    const interpretCmd = (givenDirPath, givenCmd) => {\r\n      if(window.innerHeight + window.scrollY > document.getElementById('box').scrollHeight){\r\n        document.getElementById('box').style.height = backgroundHeight.toString() + \"vh\";\r\n        setBackgroundHeight(backgroundHeight+50);\r\n      }\r\n      const waitToInterpret = new Promise((resolve) => {\r\n        if(givenCmd == \"ls\"){\r\n          handleLs(givenDirPath, givenCmd).then(result => {\r\n            resolve();\r\n          });\r\n        }else if(givenCmd.startsWith(\"makedir \")){\r\n          handleMakedir(givenDirPath, givenCmd).then(result => {\r\n            resolve();\r\n          });\r\n        }else if(givenCmd.startsWith(\"cd \")){\r\n          handleCd(givenDirPath, givenCmd).then(result => {\r\n            resolve();\r\n          });\r\n        }else if(givenCmd.startsWith(\"upload \")){\r\n          handleUpload(givenDirPath, givenCmd).then(result => {\r\n            resolve();\r\n          });\r\n        }else if(givenCmd.startsWith(\"download \")){\r\n          handleDownload(givenDirPath, givenCmd).then(result => {\r\n            resolve();\r\n          });\r\n        }else{\r\n          changeCmdList([...cmdList, makeNewPath(givenDirPath, givenCmd), \"Command given does not exist\"]);\r\n          resolve();\r\n        }\r\n      });\r\n      return waitToInterpret;\r\n    }\r\n\r\n    return (\r\n      <div id=\"box\" style={{backgroundColor: 'black'}}>\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            height: \"100vh\",\r\n            backgroundColor: 'black'\r\n          }}\r\n        >\r\n          <input className=\"invisible\" type=\"file\" name=\"file\" id=\"upload\" onChange={fileSelected}/>\r\n          {cmdList.map((cmd) => <OldCmd text={cmd}/>)}\r\n          <CmdInput interpretCmd={interpretCmd} currDirPath={currDirPath}/>\r\n        </Box>\r\n      </div>\r\n    )\r\n}\r\n","import { React, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {withRouter} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { contains } from 'jquery';\r\n\r\nexport default function SignUp(props) {\r\n    \r\n    // React hook variables\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [signupSuccess, setUserSignedUp] = useState(false);\r\n    const [emailExists, setEmailExists] = useState(false);\r\n    const [passwordErr, setPasswordErr] = useState(false);\r\n    // Given Server Side Url\r\n    const givenUrl = props.url;\r\n\r\n    const checkUser = (userUrl) => {\r\n        const waitToCheck = new Promise((resolve) => {\r\n            fetch(userUrl, {method: \"GET\"}).then(res => res.json()).then(data => {\r\n                resolve(data['user_exists']);\r\n            });\r\n        });\r\n        return waitToCheck;\r\n    }\r\n\r\n    const contains = (password, character) => {\r\n        return password.indexOf(character) !== -1;\r\n    }\r\n\r\n    const containsSpecial = (password) => {\r\n        const specialChars = \"!@#$%^&*()_+\\-=\\[\\]{};':\\\"\\\\|,.<>\\/?\";\r\n        for(let i = 0; i < specialChars.length; i++){\r\n            if(contains(password, specialChars[i])) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const containsUpper = (password) => {\r\n        const upperChars = \"QWERTYUIOPASDFGHJKLZXCVBNM\";\r\n        for(let i = 0; i < 26; i++){\r\n            if(contains(password, upperChars[i])) return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const passCheck = (password) => {\r\n        // Regex to check for upper case & special characters\r\n        return password.length >= 10 && containsUpper(password) && containsSpecial(password);\r\n    };\r\n\r\n    // Function for checking if user exists and if so, creating the user\r\n    const createUser = () => {\r\n        if(!passCheck(password)){\r\n            console.log(password + \" is not good\");\r\n            setPasswordErr(true);\r\n            setUserSignedUp(false); \r\n            setEmailExists(false);\r\n            return;\r\n        }\r\n        let userUrl = givenUrl + \"files/user?email=\" + email + \"&password=\" + password;\r\n        checkUser(userUrl).then(userExists => {\r\n            console.log(\"Check user exist: \" + userExists);\r\n            if(!userExists){\r\n                fetch(userUrl, {method: \"POST\"}).then(res => res.json()).then(data => {\r\n                    let userId = data['id']\r\n                    let createDirUrl = givenUrl + \"files/dir?parent_path=C:&dir_name=home&dir_path=C:/home&is_home_path=1&user_id=\" + userId;\r\n                    fetch(createDirUrl, {method: \"POST\"}).then(res => {\r\n                        console.log(\"Created with user id: \" + userId);\r\n                        setUserSignedUp(true); \r\n                        setEmailExists(false);\r\n                        setPasswordErr(false);\r\n                    });\r\n                });\r\n            }else{\r\n                setEmailExists(true);\r\n                setUserSignedUp(false);\r\n                setPasswordErr(false);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Function called when user types changes into email field\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    // Function called when user types changes into password field\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" style={{width: \"500px\", marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"100px\"}}>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleEmailChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" style={{width: \"500px\", marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"100px\"}}>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} />\r\n            </Form.Group>\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            {signupSuccess && <p> You have successfully signed up! Now go and log in. </p>}\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            {emailExists && <p> Email already exists! </p>}\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            {passwordErr && <p> Password must be at least 10 characters and contain an upper case and special character </p>}\r\n            </div>\r\n            \r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Button onClick={createUser} style={{marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"10px\"}}> Create Account </Button>\r\n            </div>\r\n            \r\n        </Form>\r\n    );\r\n}","import { React, useState } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nexport default function Login(props) {\r\n    const { givenUrl, saveTokenFunc } = props;\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [wrongPassword, setWrongPassword] = useState(false);\r\n    const [wrongEmail, setWrongEmail] = useState(false);\r\n    console.log(\"Given url: \" + givenUrl);\r\n\r\n    // Function called when user changes content of email field\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    }\r\n\r\n    // Function called when user changes content of password field\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    }\r\n\r\n    // Function called when user clicks sign in button\r\n    const authenticateUser = () => {\r\n        const userUrl = givenUrl + \"files/user?email=\" + email + \"&password=\" + password;\r\n        fetch(userUrl, {method: \"GET\"}).then(res => res.json()).then(data => {\r\n            if(data['user_pass_exists']){\r\n                setWrongPassword(false);\r\n                setWrongEmail(false);\r\n                saveTokenFunc(data['id']);\r\n            }else if(data['user_exists']){\r\n                setWrongPassword(true);\r\n                setWrongEmail(false);\r\n            }else{\r\n                setWrongPassword(false);\r\n                setWrongEmail(true);\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <header className=\"logInHeader\">\r\n        <Form>\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\" style={{width: \"500px\", marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"100px\"}}>\r\n                <Form.Label>Email address</Form.Label>\r\n                <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={handleEmailChange}/>\r\n                <Form.Text className=\"text-muted\">\r\n                We'll never share your email with anyone else.\r\n                </Form.Text>\r\n            </Form.Group>\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\" style={{width: \"500px\", marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"100px\"}}>\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control type=\"password\" placeholder=\"Password\" onChange={handlePasswordChange} />\r\n            </Form.Group>\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                {wrongEmail && <p> The email does not exist </p>}\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n                {wrongPassword && <p> Password is incorrect! </p>}\r\n            </div>\r\n\r\n            <div style={{display: 'flex',  justifyContent:'center', alignItems:'center'}}>\r\n            <Button onClick={authenticateUser} style={{marginTop:\"30px\", marginLeft: \"100px\", marginRight: \"10px\"}}> Sign In </Button>\r\n            </div>\r\n            \r\n        </Form>\r\n        </header>\r\n        \r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Help(props){\r\n    return (\r\n        <div>\r\n            <p><br/>&nbsp;&nbsp; The given terminal is acts like any Unix-based system, but with much more restrictions. </p>\r\n            <h3>&nbsp; Available commands </h3>\r\n            <p>&nbsp;&nbsp; <b>ls</b> - list contents of current directory </p>\r\n            <p>&nbsp;&nbsp; <b>cd [new directory]</b> - change directory (Ex: cd [sub directory name], cd [full path to new directory], cd [partial path to new directory]) </p> \r\n            <p>&nbsp;&nbsp; <b>makedir</b> - create a directory </p>\r\n            <p>&nbsp;&nbsp; <b>upload [file name]</b> - will prompt you to select a file to upload, which will be available on this system with the name you gave it</p>\r\n            <p>&nbsp;&nbsp; <b>download [file name]</b>- downloads the file, if its in the current directory </p>\r\n        </div>\r\n    );\r\n}","import { React, useState } from 'react';\r\n\r\nexport default function Signout(props) {\r\n    props.clearToken();\r\n    return (<div></div>);\r\n}","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nfunction PublicNav(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div class=\"container\">\r\n          <Link class=\"navbar-brand\" to=\"/\">\r\n            Save My Files\r\n          </Link>\r\n\r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/home\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/home\">\r\n                  Log In\r\n                </Link>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/signup\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/signup\">\r\n                  Create Account\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(PublicNav);","import React from \"react\";\r\nimport { Link, withRouter }  from \"react-router-dom\";\r\n\r\nfunction PrivateNav(props) {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <nav class=\"navbar navbar-expand navbar-dark bg-dark\">\r\n        <div class=\"container\">\r\n          <Link class=\"navbar-brand\" to=\"/\">\r\n            Save My Files\r\n          </Link>\r\n\r\n          <div>\r\n            <ul class=\"navbar-nav ml-auto\">\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/home\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/home\">\r\n                  My Files\r\n                </Link>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/help\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/help\">\r\n                  Help\r\n                </Link>\r\n              </li>\r\n              <li\r\n                class={`nav-item  ${\r\n                  props.location.pathname === \"/signout\" ? \"active\" : \"\"\r\n                }`}\r\n              >\r\n                <Link class=\"nav-link\" to=\"/signout\">\r\n                    Sign out\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\nexport default withRouter(PrivateNav);\r\n","import { React, useState } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Home from './Home.jsx';\nimport Signup from './Signup.jsx';\nimport Login from './Login.jsx';\nimport Help from './Help.jsx';\nimport Signout from './Signout.jsx';\nimport PublicNav from './PublicNav.jsx';\nimport PrivateNav from './PrivateNav.jsx';\n\nfunction App(){\n  // Get the token that is stored in browser history\n  const getToken = () => {\n    const tokenString = localStorage.getItem('token');\n    const userToken = JSON.parse(tokenString);\n    return userToken;\n  }\n  \n  // Set token saved in browser as react hook\n  const [token, setToken] = useState(getToken());\n  const backendUrl = \"http://127.0.0.1:8000/\";\n\n  // Function called when user signs in successfully\n  const saveToken = (userToken) => {\n    // Store user information in browser\n    localStorage.setItem('token', JSON.stringify(userToken));\n    // Trigger react hook so page reloads to user home screen\n    setToken(userToken);\n  };\n\n  // Function called to sign user out\n  const clearToken = () => {\n    // Clear local storage\n    localStorage.clear();\n    // Reset token -> triggers react to reload, causing sign in page to appear\n    setToken(getToken());\n  }\n\n  // If the token does not exist, prompt the user to sign in\n  if(!token){\n    return (<div className=\"PublicView\"> \n      <Router> \n        <PublicNav/>\n        <Route path=\"/signup\"> <Signup url={backendUrl}/> </Route>\n        <Route path=\"/home\"> <Login givenUrl={backendUrl} saveTokenFunc={saveToken}/> </Route>\n      </Router>\n    </div>);\n  }\n\n  return (\n    <div className=\"UserView\">\n      <Router>\n        <PrivateNav/>\n        <Route path=\"/home\"> <Home userId={getToken()}/> </Route>\n        <Route path=\"/help\"> <Help/> </Route>\n        <Route path=\"/signout\"> <Signout clearToken={clearToken}/> </Route>\n      </Router>\n    </div>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}